apiVersion: apps/v1
kind: Deployment
metadata:
    name: kubedeckui
    namespace: {{ .Release.Namespace }}
    labels:
        app: kubedeckui
spec:
    replicas: {{ .Values.controllerManager.replicas }}
    selector:
        matchLabels:
            app: kubedeckui
    template:
        metadata:
            labels:
                app: kubedeckui
        spec:
            containers:
                - name: kubedeckui
                  image: {{ .Values.kubedeckui.container.image.repository }}:{{ .Values.kubedeckui.container.image.tag }}
                  ports:
                      - containerPort: 8173
---
apiVersion: v1
kind: Service
metadata:
    name: kubedeckui-service
    namespace: {{ .Release.Namespace }}
spec:
    selector:
        app: kubedeckui
    ports:
        - protocol: TCP
          port: 80
          targetPort: 8173
    type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
    name: kubedeckui-ingress
    namespace: {{ .Release.Namespace }}
    annotations:
        cert-manager.io/cluster-issuer: "letsencrypt"
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
    ingressClassName: nginx
    tls:
        - secretName: ui-orion-nikcorp-ru-tls
          hosts:
              - {{ .Values.baseHostName }}
    rules:
        - host: {{ .Values.baseHostName }}
          http:
              paths:
                  - path: /
                    pathType: Prefix
                    backend:
                        service:
                            name: kubedeckui-service
                            port:
                                number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress ## временно
metadata:
    name: prometheus-ingress
    namespace: kube-prometheus-stack
    annotations:
        cert-manager.io/cluster-issuer: "letsencrypt"
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
    ingressClassName: nginx
    tls:
        - secretName: prometheus-tls
          hosts:
              - {{ .Values.baseHostName }}
    rules:
        - host: {{ .Values.baseHostName }}
          http:
              paths:
                  - path: /prometheus(/|$)(.*)
                    pathType: ImplementationSpecific
                    backend:
                        service:
                            name: kube-prometheus-stack-prometheus
                            port:
                                number: 9090
---
apiVersion: networking.k8s.io/v1
kind: Ingress ## временно
metadata:
    name: operator-ingress
    namespace: {{ .Release.Namespace }}
    annotations:
        cert-manager.io/cluster-issuer: "letsencrypt"
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
    ingressClassName: nginx
    tls:
        - secretName: operator-tls
          hosts:
              - {{ .Values.baseHostName }}
    rules:
        - host: {{ .Values.baseHostName }}
          http:
              paths:
                  - path: /operator(/|$)(.*)
                    pathType: ImplementationSpecific
                    backend:
                        service:
                            name: kubedeck-controller-manager-metrics-service
                            port:
                                number: 8999
